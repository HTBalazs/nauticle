/////////////////////////////////////////////////////////////////////////////
// Name:        pmTimer.cpp
// Purpose:     pmTimer class
// Author:      Balázs Tóth
// Modified by:
// Created:     10/07/2016
// Copyright:   (c) LEMPS-project
// Licence:     GPL
/////////////////////////////////////////////////////////////////////////////

#include "pmTimer.h"

/////////////////////////////////////////////////////////////////////////////////////////
/// Constructor that initializes start and end timers to 0.
/////////////////////////////////////////////////////////////////////////////////////////
pmTimer::pmTimer() {
	time(&start);  // seconds from the reference date (1900.01.01)
	estimated_finish = start;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Sets the timer (start) to the current time.
/////////////////////////////////////////////////////////////////////////////////////////
void pmTimer::tic() {
	start_tick = clock();
	ticked = true;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Sets the timer (end) to the current time.
/////////////////////////////////////////////////////////////////////////////////////////
void pmTimer::tac() {
	if(!ticked) { this->tic(); }
	end_tick = clock();
	ticked = false;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the difference between start and end in seconds
/////////////////////////////////////////////////////////////////////////////////////////
float pmTimer::get_difference() const {
	return (float)(end_tick-start_tick)/CLOCKS_PER_SEC;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the date of the object creation.
/////////////////////////////////////////////////////////////////////////////////////////
struct tm pmTimer::get_start() const {
	return *localtime(&start);
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the date of call.
/////////////////////////////////////////////////////////////////////////////////////////
struct tm pmTimer::get_current() const {
	time_t current;
	time(&current);
	return *localtime(&current);
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the estimated end date based on the object creation and the progress.
/////////////////////////////////////////////////////////////////////////////////////////
struct tm pmTimer::get_estimated_finish(float const& progress) {
	if(progress<1e-2f) {
		return *localtime(&start);
	}
	time_t current_time;
	time(&current_time);
	estimated_finish = (current_time-start)/progress*100.0f+start;
	return *localtime(&estimated_finish);
}