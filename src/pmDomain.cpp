/////////////////////////////////////////////////////////////////////////////
// Name:        pmDomain.cpp
// Purpose:     pmDomain class.
// Author:      Balázs Tóth
// Modified by:
// Created:     10/07/2016
// Copyright:   (c) LEMPS-project
// Licence:     GPL
/////////////////////////////////////////////////////////////////////////////

#include "pmDomain.h"

/////////////////////////////////////////////////////////////////////////////////////////
/// Constructor.
/////////////////////////////////////////////////////////////////////////////////////////
pmDomain::pmDomain(pmTensor const& dmin, pmTensor const& dmax, float const& csize) {
	if(dmin.numel()!=dmax.numel()) {
		pLogger::error_msgf("Domain requires vectors of identical sizes.\n");
	}
	minimum = dmin;
	maximum = dmax;
	cell_size = csize;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the minimum coordinate of the domain.
/////////////////////////////////////////////////////////////////////////////////////////
pmTensor pmDomain::get_minimum() const {
	return minimum;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the maximum coordinate of the domain.
/////////////////////////////////////////////////////////////////////////////////////////
pmTensor pmDomain::get_maximum() const {
	return maximum;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the cell size of the domain.
/////////////////////////////////////////////////////////////////////////////////////////
float pmDomain::get_cell_size() const {
	return cell_size;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the number of cells.
/////////////////////////////////////////////////////////////////////////////////////////
size_t pmDomain::get_num_cells() const {
	return (int)(maximum-minimum).productum();
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Returns the dimensions of the domain.
/////////////////////////////////////////////////////////////////////////////////////////
size_t pmDomain::get_dimensions() const {
	return minimum.numel();
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Prints the domain object content.
/////////////////////////////////////////////////////////////////////////////////////////
void pmDomain::print() const {
	pLogger::logf<LYW>("Domain: ");
	pLogger::logf<COLOR>("min: ");
	minimum.print();
	pLogger::logf<COLOR>(", ");
	pLogger::logf<COLOR>("max: ");
	maximum.print();
	pLogger::logf<COLOR>(", cell size: %g", cell_size);
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Setter for domain_min.
/////////////////////////////////////////////////////////////////////////////////////////
void pmDomain::set_minimum(pmTensor const& mn) {
	minimum = mn;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Setter for domain_max.
/////////////////////////////////////////////////////////////////////////////////////////
void pmDomain::set_maximum(pmTensor const& mx) {
	maximum = mx;
}
/////////////////////////////////////////////////////////////////////////////////////////
/// Setter for cell_size.
/////////////////////////////////////////////////////////////////////////////////////////
void pmDomain::set_cell_size(float const& csize) {
	cell_size = csize;
}


